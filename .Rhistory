p_death_daily_untreated=ifelse(day<=start_age_years*365,0,p_death_daily_untreated) # probability of death in untreated will be zero since start date
days= function(x){
a= ifelse(x<p_death_daily_untreated,TRUE,FALSE)
min(which(a==TRUE)) # first day on which true(death) is detected
}
days1= function(x){
a= ifelse(x<p_death_daily_treated,TRUE,FALSE)
min(which(a==TRUE))
}
options(scipen=999) # removing scientific notation
m =matrix(runif(n=max_age_days*n_patients), ncol=n_patients) # generating a random matrix of values between 0 and 1 which follow a uniform distribution
control_life_days=apply(m,2,days) # applying function to each row of matrix of 1000 columns9patients) and 54750 days(rows)
treated_life_days=apply(m,2,days1)
rm(m)
extra=treated_life_days-control_life_days
gg= data.frame(control_life_days,treated_life_days,extra,age=start_age_years,sex=gender,risk=baseline_CVD_hazard_ratio)
gg
}
am = lifespandays1(start_age_years = 80,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
lifespandays1 = function(start_age_years,gender,baseline_CVD_hazard_ratio,max_age_years=150,hazard_reduction=0.3,n_patients=1000){
library(SyncRNG)
set.seed(123456,'user','user')
mort= subset(mortal,sex==gender)
max_age_days= max_age_years*365
day = c(1:max_age_days) # making a variable of all days
year=day/365 # converting days to years
hazard_ratio_treated = 1 -hazard_reduction*(year>=start_age_years) # hazard ratio of treated only starts from start age year
row_number_in_mortality_table=floor(day/365 ) # row number denotes year
row_number_in_mortality_table=  ifelse(row_number_in_mortality_table>139,139,row_number_in_mortality_table)
ihd_mortality= c(rep(mort$ihd_mortality,each=365),rep(mort$ihd_mortality[140],10*365)) # repeating ihd mortality year corresponding to days
non_ihd_mortality= c(rep(mort$non_ihd_mortality,each=365),rep(mort$non_ihd_mortality[140],10*365))
# maximum age in mortality table is 139, thus age from 139 to 150(max_age) expresses as 139
daily_ihd_mortality_UK_av=1-(1-ihd_mortality)**(1/365) # converting yearly to daily mortality
daily_ihd_mortality= baseline_CVD_hazard_ratio*daily_ihd_mortality_UK_av # daily IHD mortality will be a multiple of hazard
daily_non_ihd_mortality=1-(1-non_ihd_mortality)**(1/365)# converting yearly non-ihd mortality to daily
p_death_daily_untreated= daily_non_ihd_mortality + daily_ihd_mortality# probability of total mortality will be sum of IHD n non IHD mortality in untreated
p_death_daily_treated = daily_non_ihd_mortality +daily_ihd_mortality*hazard_ratio_treated # probability of mortality in treated will be sum of non_ihd and ihd mortality reduced by hazard reduction
p_death_daily_treated=ifelse(day<=start_age_years*365,0,p_death_daily_treated) # probability of death in treated will be zero since start date
p_death_daily_untreated=ifelse(day<=start_age_years*365,0,p_death_daily_untreated) # probability of death in untreated will be zero since start date
days= function(x){
a= ifelse(x<p_death_daily_untreated,TRUE,FALSE)
min(which(a==TRUE)) # first day on which true(death) is detected
}
days1= function(x){
a= ifelse(x<p_death_daily_treated,TRUE,FALSE)
min(which(a==TRUE))
}
options(scipen=999) # removing scientific notation
m =matrix(runif(n=max_age_days*n_patients), ncol=n_patients) # generating a random matrix of values between 0 and 1 which follow a uniform distribution
control_life_days=apply(m,2,days) # applying function to each row of matrix of 1000 columns9patients) and 54750 days(rows)
treated_life_days=apply(m,2,days1)
rm(m)
extra=treated_life_days-control_life_days
gg= data.frame(control_life_days,treated_life_days,extra,age=start_age_years,sex=gender,risk=baseline_CVD_hazard_ratio)
gg
}
am = lifespandays1(start_age_years = 80,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
lifespandays1 = function(start_age_years,gender,baseline_CVD_hazard_ratio,max_age_years=150,hazard_reduction=0.3,n_patients=1000){
library(SyncRNG)
set.seed(123456,'user','user')
mort= subset(mortal,sex==gender)
max_age_days= max_age_years*365
day = c(1:max_age_days) # making a variable of all days
year=day/365 # converting days to years
hazard_ratio_treated = 1 -hazard_reduction*(year>=start_age_years) # hazard ratio of treated only starts from start age year
row_number_in_mortality_table=floor(day/365 ) # row number denotes year
row_number_in_mortality_table=  ifelse(row_number_in_mortality_table>139,139,row_number_in_mortality_table)
ihd_mortality= c(rep(mort$ihd_mortality,each=365),rep(mort$ihd_mortality[140],10*365)) # repeating ihd mortality year corresponding to days
non_ihd_mortality= c(rep(mort$non_ihd_mortality,each=365),rep(mort$non_ihd_mortality[140],10*365))
# maximum age in mortality table is 139, thus age from 139 to 150(max_age) expresses as 139
daily_ihd_mortality_UK_av=1-(1-ihd_mortality)**(1/365) # converting yearly to daily mortality
daily_ihd_mortality= baseline_CVD_hazard_ratio*daily_ihd_mortality_UK_av # daily IHD mortality will be a multiple of hazard
daily_non_ihd_mortality=1-(1-non_ihd_mortality)**(1/365)# converting yearly non-ihd mortality to daily
p_death_daily_untreated= daily_non_ihd_mortality + daily_ihd_mortality# probability of total mortality will be sum of IHD n non IHD mortality in untreated
p_death_daily_treated = daily_non_ihd_mortality +daily_ihd_mortality*hazard_ratio_treated # probability of mortality in treated will be sum of non_ihd and ihd mortality reduced by hazard reduction
p_death_daily_treated=ifelse(day<=start_age_years*365,0,p_death_daily_treated) # probability of death in treated will be zero since start date
p_death_daily_untreated=ifelse(day<=start_age_years*365,0,p_death_daily_untreated) # probability of death in untreated will be zero since start date
days= function(x){
a= ifelse(x<p_death_daily_untreated,TRUE,FALSE)
min(which(a==TRUE)) # first day on which true(death) is detected
}
days1= function(x){
a= ifelse(x<p_death_daily_treated,TRUE,FALSE)
min(which(a==TRUE))
}
options(scipen=999) # removing scientific notation
m =matrix(runif(n=max_age_days*n_patients), ncol=n_patients) # generating a random matrix of values between 0 and 1 which follow a uniform distribution
control_life_days=apply(m,2,days) # applying function to each row of matrix of 1000 columns9patients) and 54750 days(rows)
treated_life_days=apply(m,2,days1)
rm(m)
extra=treated_life_days-control_life_days
gg= data.frame(control_life_days,treated_life_days,extra,age=start_age_years,sex=gender,risk=baseline_CVD_hazard_ratio)
gg
}
am = lifespandays1(start_age_years = 80,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 50,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 50,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 55,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 80,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
library(SyncRNG)
set.seed(123456,'user','user')
lifespandays1 = function(start_age_years,gender,baseline_CVD_hazard_ratio,max_age_years=150,hazard_reduction=0.3,n_patients=1000){
mort= subset(mortal,sex==gender)
max_age_days= max_age_years*365
day = c(1:max_age_days) # making a variable of all days
year=day/365 # converting days to years
hazard_ratio_treated = 1 -hazard_reduction*(year>=start_age_years) # hazard ratio of treated only starts from start age year
row_number_in_mortality_table=floor(day/365 ) # row number denotes year
row_number_in_mortality_table=  ifelse(row_number_in_mortality_table>139,139,row_number_in_mortality_table)
ihd_mortality= c(rep(mort$ihd_mortality,each=365),rep(mort$ihd_mortality[140],10*365)) # repeating ihd mortality year corresponding to days
non_ihd_mortality= c(rep(mort$non_ihd_mortality,each=365),rep(mort$non_ihd_mortality[140],10*365))
# maximum age in mortality table is 139, thus age from 139 to 150(max_age) expresses as 139
daily_ihd_mortality_UK_av=1-(1-ihd_mortality)**(1/365) # converting yearly to daily mortality
daily_ihd_mortality= baseline_CVD_hazard_ratio*daily_ihd_mortality_UK_av # daily IHD mortality will be a multiple of hazard
daily_non_ihd_mortality=1-(1-non_ihd_mortality)**(1/365)# converting yearly non-ihd mortality to daily
p_death_daily_untreated= daily_non_ihd_mortality + daily_ihd_mortality# probability of total mortality will be sum of IHD n non IHD mortality in untreated
p_death_daily_treated = daily_non_ihd_mortality +daily_ihd_mortality*hazard_ratio_treated # probability of mortality in treated will be sum of non_ihd and ihd mortality reduced by hazard reduction
p_death_daily_treated=ifelse(day<=start_age_years*365,0,p_death_daily_treated) # probability of death in treated will be zero since start date
p_death_daily_untreated=ifelse(day<=start_age_years*365,0,p_death_daily_untreated) # probability of death in untreated will be zero since start date
days= function(x){
a= ifelse(x<p_death_daily_untreated,TRUE,FALSE)
min(which(a==TRUE)) # first day on which true(death) is detected
}
days1= function(x){
a= ifelse(x<p_death_daily_treated,TRUE,FALSE)
min(which(a==TRUE))
}
options(scipen=999) # removing scientific notation
m =matrix(runif(n=max_age_days*n_patients), ncol=n_patients) # generating a random matrix of values between 0 and 1 which follow a uniform distribution
control_life_days=apply(m,2,days) # applying function to each row of matrix of 1000 columns9patients) and 54750 days(rows)
treated_life_days=apply(m,2,days1)
rm(m)
extra=treated_life_days-control_life_days
gg= data.frame(control_life_days,treated_life_days,extra,age=start_age_years,sex=gender,risk=baseline_CVD_hazard_ratio)
gg
}
am = lifespandays1(start_age_years = 80,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 50,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "male")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
lifespandays = function(start_age_years,gender,baseline_CVD_hazard_ratio,max_age_years=150,hazard_reduction=0.3,n_patients=1000){
mortal= read.csv('https://raw.githubusercontent.com/anupamsingh81/statins/master/mortal2.csv')
mort= subset(mortal,sex==gender)
max_age_days= max_age_years*365
day = c(1:max_age_days) # making a variable of all days
year=day/365 # converting days to years
hazard_ratio_treated = 1 -hazard_reduction*(year>=start_age_years) # hazard ratio of treated only starts from start age year
row_number_in_mortality_table=floor(day/365 ) # row number denotes year
row_number_in_mortality_table=  ifelse(row_number_in_mortality_table>139,139,row_number_in_mortality_table)
ihd_mortality= c(rep(mort$ihd_mortality,each=365),rep(mort$ihd_mortality[140],10*365)) # repeating ihd mortality year corresponding to days
non_ihd_mortality= c(rep(mort$non_ihd_mortality,each=365),rep(mort$non_ihd_mortality[140],10*365))
# maximum age in mortality table is 139, thus age from 139 to 150(max_age) expresses as 139
daily_ihd_mortality_UK_av=1-(1-ihd_mortality)**(1/365) # converting yearly to daily mortality
daily_ihd_mortality= baseline_CVD_hazard_ratio*daily_ihd_mortality_UK_av # daily IHD mortality will be a multiple of hazard
daily_non_ihd_mortality=1-(1-non_ihd_mortality)**(1/365)# converting yearly non-ihd mortality to daily
p_death_daily_untreated= daily_non_ihd_mortality + daily_ihd_mortality# probability of total mortality will be sum of IHD n non IHD mortality in untreated
p_death_daily_treated = daily_non_ihd_mortality +daily_ihd_mortality*hazard_ratio_treated # probability of mortality in treated will be sum of non_ihd and ihd mortality reduced by hazard reduction
p_death_daily_treated=ifelse(day<=start_age_years*365,0,p_death_daily_treated) # probability of death in treated will be zero since start date
p_death_daily_untreated=ifelse(day<=start_age_years*365,0,p_death_daily_untreated) # probability of death in untreated will be zero since start date
days= function(x){
a= ifelse(x<p_death_daily_untreated,TRUE,FALSE)
min(which(a==TRUE)) # first day on which true(death) is detected
}
days1= function(x){
a= ifelse(x<p_death_daily_treated,TRUE,FALSE)
min(which(a==TRUE))
}
options(scipen=999) # removing scientific notation
m =matrix(runif(n=max_age_days*n_patients), ncol=n_patients) # generating a random matrix of values between 0 and 1 which follow a uniform distribution
control_life_days=apply(m,2,days) # applying function to each row of matrix of 1000 columns9patients) and 54750 days(rows)
treated_life_days=apply(m,2,days1)
rm(m)
extra=treated_life_days-control_life_days
x1 = paste('Among ',n_patients,' ',gender,' with',baseline_CVD_hazard_ratio,'times average risk started on therapy at ',start_age_years,'years of age.The percentage of those benefitting is ',(sum(extra>0)/n_patients)*100,' percent,while rest will have zero benefit. The mean overall lifespan gain is',round(mean(extra)/30,2),'months. The life span gain in the lucky beneficiaries is',round((sum(extra)/sum(extra>0))/30,2), ' months.',sep =" ")
cat(x1)}
lifespandays(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender="female")
lifespandays = function(start_age_years,gender,baseline_CVD_hazard_ratio,max_age_years=150,hazard_reduction=0.3,n_patients=1000){
library(SyncRNG)
set.seed(123456,'user','user')
mortal= read.csv('https://raw.githubusercontent.com/anupamsingh81/statins/master/mortal2.csv')
mort= subset(mortal,sex==gender)
max_age_days= max_age_years*365
day = c(1:max_age_days) # making a variable of all days
year=day/365 # converting days to years
hazard_ratio_treated = 1 -hazard_reduction*(year>=start_age_years) # hazard ratio of treated only starts from start age year
row_number_in_mortality_table=floor(day/365 ) # row number denotes year
row_number_in_mortality_table=  ifelse(row_number_in_mortality_table>139,139,row_number_in_mortality_table)
ihd_mortality= c(rep(mort$ihd_mortality,each=365),rep(mort$ihd_mortality[140],10*365)) # repeating ihd mortality year corresponding to days
non_ihd_mortality= c(rep(mort$non_ihd_mortality,each=365),rep(mort$non_ihd_mortality[140],10*365))
# maximum age in mortality table is 139, thus age from 139 to 150(max_age) expresses as 139
daily_ihd_mortality_UK_av=1-(1-ihd_mortality)**(1/365) # converting yearly to daily mortality
daily_ihd_mortality= baseline_CVD_hazard_ratio*daily_ihd_mortality_UK_av # daily IHD mortality will be a multiple of hazard
daily_non_ihd_mortality=1-(1-non_ihd_mortality)**(1/365)# converting yearly non-ihd mortality to daily
p_death_daily_untreated= daily_non_ihd_mortality + daily_ihd_mortality# probability of total mortality will be sum of IHD n non IHD mortality in untreated
p_death_daily_treated = daily_non_ihd_mortality +daily_ihd_mortality*hazard_ratio_treated # probability of mortality in treated will be sum of non_ihd and ihd mortality reduced by hazard reduction
p_death_daily_treated=ifelse(day<=start_age_years*365,0,p_death_daily_treated) # probability of death in treated will be zero since start date
p_death_daily_untreated=ifelse(day<=start_age_years*365,0,p_death_daily_untreated) # probability of death in untreated will be zero since start date
days= function(x){
a= ifelse(x<p_death_daily_untreated,TRUE,FALSE)
min(which(a==TRUE)) # first day on which true(death) is detected
}
days1= function(x){
a= ifelse(x<p_death_daily_treated,TRUE,FALSE)
min(which(a==TRUE))
}
options(scipen=999) # removing scientific notation
m =matrix(runif(n=max_age_days*n_patients), ncol=n_patients) # generating a random matrix of values between 0 and 1 which follow a uniform distribution
control_life_days=apply(m,2,days) # applying function to each row of matrix of 1000 columns9patients) and 54750 days(rows)
treated_life_days=apply(m,2,days1)
rm(m)
extra=treated_life_days-control_life_days
x1 = paste('Among ',n_patients,' ',gender,' with',baseline_CVD_hazard_ratio,'times average risk started on therapy at ',start_age_years,'years of age.The percentage of those benefitting is ',(sum(extra>0)/n_patients)*100,' percent,while rest will have zero benefit. The mean overall lifespan gain is',round(mean(extra)/30,2),'months. The life span gain in the lucky beneficiaries is',round((sum(extra)/sum(extra>0))/30,2), ' months.',sep =" ")
cat(x1)}
lifespandays(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender="female")
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "male")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
lifespandays1 = function(start_age_years,gender,baseline_CVD_hazard_ratio,max_age_years=150,hazard_reduction=0.3,n_patients=1000){
library(SyncRNG)
set.seed(123456,'user','user')
mort= subset(mortal,sex==gender)
max_age_days= max_age_years*365
day = c(1:max_age_days) # making a variable of all days
year=day/365 # converting days to years
hazard_ratio_treated = 1 -hazard_reduction*(year>=start_age_years) # hazard ratio of treated only starts from start age year
row_number_in_mortality_table=floor(day/365 ) # row number denotes year
row_number_in_mortality_table=  ifelse(row_number_in_mortality_table>139,139,row_number_in_mortality_table)
ihd_mortality= c(rep(mort$ihd_mortality,each=365),rep(mort$ihd_mortality[140],10*365)) # repeating ihd mortality year corresponding to days
non_ihd_mortality= c(rep(mort$non_ihd_mortality,each=365),rep(mort$non_ihd_mortality[140],10*365))
# maximum age in mortality table is 139, thus age from 139 to 150(max_age) expresses as 139
daily_ihd_mortality_UK_av=1-(1-ihd_mortality)**(1/365) # converting yearly to daily mortality
daily_ihd_mortality= baseline_CVD_hazard_ratio*daily_ihd_mortality_UK_av # daily IHD mortality will be a multiple of hazard
daily_non_ihd_mortality=1-(1-non_ihd_mortality)**(1/365)# converting yearly non-ihd mortality to daily
p_death_daily_untreated= daily_non_ihd_mortality + daily_ihd_mortality# probability of total mortality will be sum of IHD n non IHD mortality in untreated
p_death_daily_treated = daily_non_ihd_mortality +daily_ihd_mortality*hazard_ratio_treated # probability of mortality in treated will be sum of non_ihd and ihd mortality reduced by hazard reduction
p_death_daily_treated=ifelse(day<=start_age_years*365,0,p_death_daily_treated) # probability of death in treated will be zero since start date
p_death_daily_untreated=ifelse(day<=start_age_years*365,0,p_death_daily_untreated) # probability of death in untreated will be zero since start date
days= function(x){
a= ifelse(x<p_death_daily_untreated,TRUE,FALSE)
min(which(a==TRUE)) # first day on which true(death) is detected
}
days1= function(x){
a= ifelse(x<p_death_daily_treated,TRUE,FALSE)
min(which(a==TRUE))
}
options(scipen=999) # removing scientific notation
m =matrix(runif(n=max_age_days*n_patients), ncol=n_patients) # generating a random matrix of values between 0 and 1 which follow a uniform distribution
control_life_days=apply(m,2,days) # applying function to each row of matrix of 1000 columns9patients) and 54750 days(rows)
treated_life_days=apply(m,2,days1)
rm(m)
extra=treated_life_days-control_life_days
gg= data.frame(control_life_days,treated_life_days,extra,age=start_age_years,sex=gender,risk=baseline_CVD_hazard_ratio)
gg
}
am = lifespandays1(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 50,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
sum(am$extra>0)/10
sum(am$extra)/sum(am$extra>0)
am = lifespandays1(start_age_years = 50,baseline_CVD_hazard_ratio = 0.5,gender = "female")
mean(am$extra)
lifespandays(start_age_years = 50,baseline_CVD_hazard_ratio = 0.5,gender="female")
lifespandays(start_age_years = 35,baseline_CVD_hazard_ratio = 0.5,gender="female")
lifespandays(start_age_years = 35,baseline_CVD_hazard_ratio = 1,gender="female")
lifespandays(start_age_years = 38,baseline_CVD_hazard_ratio = 0.5,gender="female")
lifespandays(start_age_years = 80,baseline_CVD_hazard_ratio = 0.5,gender="female")
library(tidyverse)
View(jk)
ll = read.csv('summary.csv',stringsAsFactors = FALSE)
View(ll)
View(jk)
ll=ll %>% select(V4,V3,V2,V6,V5,V7)
vecnam = names(jk)
View(ll)
vecnam
ecnam[1:6]
vecnam[1:6]
vecnam=vecnam[1:6]
names(ll)=vecnam
View(ll)
summary(ll)
ll %>% mutate(lifespangain=round(lifespangain*30,2))
ll %>% mutate(lifespangain_months=lifespan) %>%
mutate(lifespangain=round(lifespangain*30,2))
ll %>% mutate(lifespangainmonths=lifespan) %>%
mutate(lifespangain=round(lifespangain*30,2))
ll %>% mutate(lifespangain=round(lifespangain*30,2),lifespangain_months=round(lifespangain/30,2))
ll %>% mutate(lifespangain=round(lifespangain*30,2),lifespangain_months=round(lifespangain/30,2)) %>%
mutate(lifespangain=round(lifespangain*30,2),lifespangain_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary=round(lifespan_gain_in_beneficiary*30,2),lifespan_gain_in_beneficiary_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary_yrs=round(lifespan_gain_in_beneficiary/365,2))
ll %>% mutate(lifespangain=round(lifespangain*30),lifespangain_months=round(lifespangain/30,2))
ll %>% mutate(lifespangain=round(lifespangain*30,2),lifespangain_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary=round(lifespan_gain_in_beneficiary*30,2),lifespan_gain_in_beneficiary_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary_yrs=round(lifespan_gain_in_beneficiary/365,2)) %>%
ll %>% mutate(lifespangain=round(lifespangain*30,2),lifespangain_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary=round(lifespan_gain_in_beneficiary*30,2),lifespan_gain_in_beneficiary_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary_yrs=round(lifespan_gain_in_beneficiary/365,2))
ll %>% mutate(lifespangain=round(lifespangain*30,2),lifespangain_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary=round(lifespan_gain_in_beneficiary*30,2),lifespan_gain_in_beneficiary_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary_yrs=round(lifespan_gain_in_beneficiary/365,2)) %>%
mutate(risk=case_when(risk=="0.5"~"Low_risk",
risk=="1"~"Average_risk",
TRUE ~ "High_risk"))
ll %>% mutate(lifespangain=round(lifespangain*30,2),lifespangain_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary=round(lifespan_gain_in_beneficiary*30,2),lifespan_gain_in_beneficiary_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary_yrs=round(lifespan_gain_in_beneficiary/365,2)) %>%
mutate(risk=case_when(risk=="0.5"~"Low_risk",
risk=="1"~"Average_risk",
TRUE ~ "High_risk")) %>%
mutate(risk=factor(risk,levels = c("Low_risk","Average_risk","High_risk"))) %>%
mutate(risk_category=str_c(risk,sex,sep="_")) %>%
mutate(risk_category=fct_inorder(risk_category)) %>%
mutate(decade=fct_inorder(as.character(age%/%10 +1)))
lk1=ll %>% mutate(lifespangain=round(lifespangain*30,2),lifespangain_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary=round(lifespan_gain_in_beneficiary*30,2),lifespan_gain_in_beneficiary_months=round(lifespangain/30,2)) %>%
mutate(lifespan_gain_in_beneficiary_yrs=round(lifespan_gain_in_beneficiary/365,2)) %>%
mutate(risk=case_when(risk=="0.5"~"Low_risk",
risk=="1"~"Average_risk",
TRUE ~ "High_risk")) %>%
mutate(risk=factor(risk,levels = c("Low_risk","Average_risk","High_risk"))) %>%
mutate(risk_category=str_c(risk,sex,sep="_")) %>%
mutate(risk_category=fct_inorder(risk_category)) %>%
mutate(decade=fct_inorder(as.character(age%/%10 +1)))
lk1 %>%filter(risk==1) %>%  ggplot(aes(x=age,y=lifespangain,group=as.factor(sex),color=as.factor(sex)))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# lifespangainmale at various level of risk
jk1 %>%filter(sex=="male") %>%  ggplot(aes(x=age,y=lifespangain,group=as.factor(risk),color=as.factor(risk)))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(lk1)
lk1 %>%filter(sex=="male") %>%  ggplot(aes(x=age,y=lifespangain,group=as.factor(risk),color=as.factor(risk)))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
View(lk1)
lk1 %>%filter(risk=="Low_risk") %>%  ggplot(aes(x=age,y=lifespangain,group=as.factor(sex),color=as.factor(sex)))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#  percentage benefit  age male
jk1 %>%filter(sex=="male") %>%  ggplot(aes(x=age,y=percentage_benefit,group=as.factor(risk),color=as.factor(risk)))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lk1 %>%filter(sex=="male") %>%  ggplot(aes(x=age,y=percentage_benefit,group=as.factor(risk),color=as.factor(risk)))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lk1 %>%filter(sex=="female") %>%  ggplot(aes(x=age,y=percentage_benefit,group=as.factor(risk),color=as.factor(risk)))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lk1 %>%filter(sex=="male") %>%  ggplot(aes(x=age,y=lifespan_gain_in_beneficiary_yrs,group=as.factor(risk),color=as.factor(risk)))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lk1  %>% split(.$risk) %>% map(~ggplot(data=.,aes(x=age,y=lifespan_gain_in_beneficiary_yrs,group=sex,color=sex))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
lk1 %>% arrange(risk_category)
lk1 %>% arrange(year)
lk1 %>% arrange(age)
lk1 %>% arrange(age) %>% view()
lk1 %>% arrange(age) %>% View()
lk1  %>% split(.$risk) %>% map(~ggplot(data=.,aes(x=age,y=lifespan_gain_in_beneficiary_yrs,group=sex,color=sex))+geom_line()+
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
jk  %>% split(.$risk) %>% map(~ggplot(data=.,aes(x=age,y=percentage_benefit,group=sex,color=sex))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +  theme(axis.text.x = element_text(angle = 90, hjust = 1)))
jk1 %>% ggplot(aes(x=age,y=percentage_benefit,group=sex,color=sex))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~risk,ncol=1)
lk1  %>% split(.$risk) %>% map(~ggplot(data=.,aes(x=age,y=percentage_benefit,group=sex,color=sex))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +  theme(axis.text.x = element_text(angle = 90, hjust = 1)))
lk1  %>% split(.$risk) %>% map(~ggplot(data=.,aes(x=age,y=percentage_benefit,group=sex,color=sex))+
geom_line()  +  theme(axis.text.x = element_text(angle = 90, hjust = 1)))
lk1 %>% ggplot(aes(x=age,y=percentage_benefit,group=sex,color=sex))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~risk,ncol=1)
lk1 %>% ggplot(aes(x=age,y=lifespan_gain_in_beneficiary_yrs,group=sex,color=sex))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~risk,ncol=1)
lk1 %>% ggplot(aes(x=age,y=lifespan_gain_in_beneficiary_yrs,group=sex,color=sex))+
geom_line()   +  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~risk,ncol=1)
lk1 %>% ggplot(aes(x=age,y=percentage_benefit,group=sex,color=sex))+
geom_line()   +  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
facet_wrap(~risk,ncol=1)
lk1 %>% mutate(risk_category=fct_inorder(risk_category)) %>%
ggplot(aes(x=age,y=lifespan_gain_in_beneficiary_yrs,group=risk_category,color=risk_category))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lk1 %>% mutate(risk_category=fct_inorder(risk_category)) %>%
ggplot(aes(x=risk_category,y=lifespan_gain_in_beneficiary_yrs,fill=risk_category))+
geom_boxplot()+coord_flip()
library(ggjoy)
jk %>% mutate(risk_category=fct_inorder(risk_category)) %>%
ggplot(aes(y=risk_category,x=lifespan_gain_in_beneficiary_yrs,fill=risk_category))+
geom_joy()
lk1 %>% mutate(risk_category=fct_inorder(risk_category)) %>%
ggplot(aes(y=risk_category,x=lifespan_gain_in_beneficiary_yrs,fill=risk_category))+
geom_joy()
lk1 %>% mutate(risk_category=fct_inorder(risk_category)) %>%
ggplot(aes(x=age,y=lifespangain,group=risk_category,color=risk_category))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lk1 %>%
ggplot(aes(x=age,y=lifespan_gain_in_beneficiary_yrs,group=risk_category,color=fct_reorder2(risk_category,age,lifespan_gain_in_beneficiary_yrs)))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(color="Risk status")+
annotate("text",x=70,y=9,label="good")
lk11 %>%
ggplot(aes(x=age,y=lifespangain,group=risk_category,color=fct_reorder2(risk_category,age,lifespangain)))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(color="Risk status")+
#geom_label_repel(data=jk.labels,aes(x=age,y=lifespangain,label=label))
geom_label_repel(data=jk.labels2,aes(x=age,y=lifespangain,label=risk_category))
library(ggrepel)
jk.labels2=jk %>% group_by(risk_category) %>% summarise(age=mean(age),lifespangain=max(lifespangain))
lk1 %>%
ggplot(aes(x=age,y=lifespangain,group=risk_category,color=fct_reorder2(risk_category,age,lifespangain)))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(color="Risk status")+
#geom_label_repel(data=jk.labels,aes(x=age,y=lifespangain,label=label))
geom_label_repel(data=jk.labels2,aes(x=age,y=lifespangain,label=risk_category))
lk1 %>% mutate(risk_category=fct_inorder(risk_category)) %>%
ggplot(aes(x=age,y=percentage_benefit,group=risk_category,color=risk_category))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lk1 %>%
ggplot(aes(x=age,y=percentage_benefit,group=risk_category,color=fct_reorder2(risk_category,age,percentage_benefit)))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
lk1 %>% split(.$risk_category) %>%
map(~ggplot(data=.,aes(x=lifespan_gain_in_beneficiary_yrs,y=percentage_benefit))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1)))
lk1 %>% ggplot(aes(x=lifespan_gain_in_beneficiary_yrs,y=percentage_benefit))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
geom_point(aes(color=decade))+
facet_wrap(~risk_category,nrow=3)
lk1 %>% ggplot(aes(x=decade,y=lifespangain))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
geom_boxplot()+
facet_wrap(~risk_category,nrow=3)
lk1 %>% ggplot(aes(x=decade,y=lifespan_gain_in_beneficiary_yrs))+
stat_smooth(method = "loess", formula = y ~ x, size = 1,se=FALSE)   +
theme(axis.text.x = element_text(angle = 90, hjust = 1))+
geom_boxplot()+
facet_wrap(~risk_category,nrow=3)
# decade percentage
lk1 %>% mutate(decade=fct_inorder(as.character(age%/%10))) %>%
ggplot(aes(x=decade,y=percentage_benefit,fill=decade))+
geom_boxplot()
lk1 %>% mutate(decade=fct_inorder(as.character(age%/%10))) %>%
ggplot(aes(x=decade,y=lifespan_gain_in_beneficiary_yrs,fill=decade))+
geom_boxplot()
lk1 %>% mutate(decade=fct_inorder(as.character(age%/%10))) %>%
ggplot(aes(x=lifespan_gain_in_beneficiary_yrs,color=decade))+
geom_freqpoly(binwidth=0.5)
